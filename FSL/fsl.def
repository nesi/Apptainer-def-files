Bootstrap: docker
From: ubuntu:22.04

%environment
    export DEBIAN_FRONTEND="noninteractive"
    export LANG=en_NZ.utf8
    export FSLDIR=/usr/local/fsl
    export PATH=$FSLDIR/bin:$PATH
    export FSLMULTIFILEQUIT=TRUE
    export FSLOUTPUTTYPE=NIFTI_GZ
    export PATH="/opt/mrtrix3/bin:${PATH}"
    # FSL conda environment
    export FSLCONDIR=/usr/local/fsl/bin
    export PATH="${FSLCONDIR}:${PATH}"
    # Add other FSL-specific environment variables
    export FSLWISH="${FSLDIR}/bin/wish"
    export FSLTCLSH="${FSLDIR}/bin/tclsh"
    export FSLMULTIFILEQUIT=TRUE
    export FSLOUTPUTTYPE=NIFTI_GZ
    # Set cache directory for Numba
    export NUMBA_CACHE_DIR=/tmp/numba_cache

%post
    # Update and install system dependencies
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
        curl \
        git \
        ldap-utils \
        libnss-ldapd \
        libpam-ldapd \
        less \
        nano \
        nodejs \
        nscd \
        nslcd \
        python-is-python3 \
        python3 \
        python3-pip \
        rsync \
        unzip \
        vim \
        wget \
        zip \
        file \
        dc \
        mesa-utils \
        pulseaudio \
        libquadmath0 \
        libgtk2.0-0 \
        firefox \
        libgomp1 \
        libatlas-base-dev \
        gfortran \
        libhdf5-dev \
        libblas-dev \
        liblapack-dev \
        libfreetype6-dev
    
    # Install MRtrix3 requirements
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
        libeigen3-dev \
        zlib1g-dev \
        libqt5opengl5-dev \
        libqt5svg5-dev \
        libgl1-mesa-dev \
        libfftw3-dev \
        libtiff5-dev \
        libpng-dev \
        libssl-dev \
        cmake \
        ninja-build \
        libx11-6 \
        libxext6 \
        libxt6 \
        libxmu6 \
        libxft2 \
        libxinerama1 \
        ca-certificates
    
    # Clean up apt cache
    rm -rf /var/lib/apt/lists/*

    # Set environment variables for the build process
    export FSLDIR=/usr/local/fsl
    export PATH=$FSLDIR/bin:$PATH
    export FSLCONDIR=/usr/local/fsl/bin
    export PATH="${FSLCONDIR}:${PATH}"
    export NUMBA_CACHE_DIR=/tmp/numba_cache

    # Create Numba cache directory
    mkdir -p /tmp/numba_cache
    chmod 777 /tmp/numba_cache

    # Install FSL
    wget https://fsl.fmrib.ox.ac.uk/fsldownloads/fslconda/releases/fslinstaller.py
    python ./fslinstaller.py -d /usr/local/fsl/ --skip_registration

    # Install additional packages into FSL's conda environment
    /usr/local/fsl/bin/conda install -y -c conda-forge \
        jupyterlab \
        numpy \
        scipy \
        pandas \
        matplotlib \
        nilearn \
        mne \
        numba

    # Install HD-BET
    git clone https://github.com/MIC-DKFZ/HD-BET && \
        cd HD-BET && \
        sed -i '/torch>=/d' pyproject.toml && \
        sed -i '/torch>=/d' requirements.txt && \
        pip install --no-cache-dir torch --index-url https://download.pytorch.org/whl/cpu && \
        pip install -e .

    # Install MRtrix3
    cd /opt
    git clone https://github.com/MRtrix3/mrtrix3.git
    cd /opt/mrtrix3
    ./configure -nogui
    ./build

%test
    # Create test script that properly configures environment
    cat << 'EOF' > /tmp/test.py
import os
os.environ['NUMBA_CACHE_DIR'] = '/tmp/numba_cache'
import nilearn
import numpy
import mne
print("Imports successful!")
EOF
    python3 /tmp/test.py

%labels
    Author Your Name
    Version v1.0
    Description Neuroimaging container with FSL, MRtrix3, and HD-BET
